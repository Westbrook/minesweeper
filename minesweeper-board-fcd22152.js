import{e,f as t,g as s,a as r,b as o,c as n,d as i}from"./chunk-cfc15dc0.js";import{defaultBoard as a}from"./minesweeper-app.js";const u=Symbol();const c={initial:"INIT",states:{INIT:{on:{MINE:"MINE",NOT_MINE:"NOT_MINE"}},NOT_MINE:{on:{MARKED:"MARKED",PLAYED:"PLAYED"}},MINE:{on:{MARKED:"MARKED_MINE",PLAYED:"TRIPPED"}},MARKED:{on:{UNMARKED:"NOT_MINE"}},PLAYED:{on:{}},MARKED_MINE:{on:{UNMARKED:"MINE"}},TRIPPED:{on:{}}}},h=(e,t)=>e?c.states[e].on[t]||e:c.initial,d=new WeakMap,l=e(e=>r=>{if(!(r instanceof t)||r instanceof s||"class"!==r.committer.name||r.committer.parts.length>1)throw new Error("The `classMap` directive must be used in the `class` attribute and must be the only part in the attribute.");const{committer:o}=r,{element:n}=o;d.has(r)||(n.className=o.strings.join(" "));const{classList:i}=n,a=d.get(r);for(const t in a)t in e||i.remove(t);for(const t in e){const s=e[t];if(!a||s!==a[t]){i[s?"add":"remove"](t)}}d.set(r,e)});function m(){const e=i(["<button class="," tabindex="," @click="," @contextmenu="," aria-label=",">","</button>"]);return m=function(){return e},e}function g(){const e=i([":host{display:flex;line-height:var(--minesweeper-square-size,25px);text-align:center}.square{cursor:pointer;box-sizing:border-box;width:100%;height:100%;border:4px outset;background:var(--color-square-background,#cecece);font-weight:700;font-family:monospace;font-size:2em;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.square:focus{transform:translateZ(0);outline:2px solid var(--color-square-focus,#00f);outline-offset:-10px}.played{border:1px solid var(--color-square-border,#999)}.played:focus{outline-offset:-5px}.low{color:var(--color-danger-low,#00f)}.medium{color:var(--color-danger-medium,green)}.high{color:var(--color-danger-high,red)}.worry{color:var(--color-danger-worry,#8b0000)}.dead{background:var(--color-dead,red)}"]);return g=function(){return e},e}function b(){const e=i(["<minesweeper-square state="," neighbors="," column="," row="," ?can-focus="," @minesweeper-played="," @minesweeper-marked="," @focus="," @blur=","></minesweeper-square>"]);return b=function(){return e},e}function f(){const e=i(["<div class=status>","/","</div>",""]);return f=function(){return e},e}function p(){const e=i([":host{position:relative;display:grid;flex-grow:1;grid-auto-flow:column;grid-template-columns:repeat(var(--columns),1fr);grid-template-rows:repeat(var(--rows),1fr)}.status{position:absolute;bottom:100%;right:0;line-height:48px}"]);return p=function(){return e},e}customElements.define("minesweeper-square",class extends r{static get properties(){return{canFocus:{type:Boolean,attribute:"can-focus"},neighbors:{type:Number},state:{type:String},column:{type:Number},row:{type:Number}}}constructor(){super(),this.state="INIT",this.neighbors=0,this.column=0,this.row=0}_dangerLevel(){switch(this.state){case"MARKED":case"MARKED_MINE":return"m";case"TRIPPED":return"x";case"PLAYED":return this.neighbors||"";case"MINE":case"NOT_MINE":default:return""}}play(){["MARKED","MARKED_MINE"].includes(this.state)||this.dispatchEvent(new CustomEvent("minesweeper-played"))}mark(e){e.preventDefault(),"PLAYED"!==this.state?this.dispatchEvent(new CustomEvent("minesweeper-marked",{detail:{marked:["MARKED","MARKED_MINE"].includes(this.state)}})):this.play()}focus(){this.shadowRoot.querySelector("button").focus()}static get styles(){return[o(g())]}testDangerLevel(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return"PLAYED"===this.state&&e>t}get squareType(){switch(this.state){case"PLAYED":return"Played";case"MARKED":case"MARKED_MINE":return"Marked";default:return"Playable"}}render(){const e=this._dangerLevel();return n(m(),l({square:!0,played:["PLAYED","TRIPPED"].includes(this.state),low:this.testDangerLevel(e),medium:this.testDangerLevel(e,1),high:this.testDangerLevel(e,2),worry:this.testDangerLevel(e,5),dead:"TRIPPED"===this.state}),this.canFocus?"0":"-1",this.play,this.mark,"".concat(this.squareType," Square: Column ").concat(this.column+1,", Row ").concat(this.column+1),e)}});const E={DEAD:"dead",PLAYING:"playing"},w=[0,0];customElements.define("minesweeper-board",class extends r{static get properties(){return{moves:{type:Number},board:{type:Array},marks:{type:Number},mines:{type:Number},status:{type:String},focusedSquare:{type:Array}}}constructor(){super(),this.board=a,this.moves=0,this.marks=0,this.mines=0,this.status=E.PLAYING,this.focusedSquare=w,this.handleKeydown=this.handleKeydown.bind(this)}get board(){return this._board}set board(e){if(e===this.board)return;const t=this.board;this._board=e,this.memoizedGetNeighboringMines=function(e){const t=new Map;return function(){let s=t,r=0,o=arguments.length;for(;s.has(r<0||arguments.length<=r?void 0:arguments[r])&&r<o-1;)s=s.get(r<0||arguments.length<=r?void 0:arguments[r]),r+=1;if(r===o-1&&s.has(u))s=s.get(u);else{for(;r<o;)s.set(r<0||arguments.length<=r?void 0:arguments[r],new Map),s=s.get(r<0||arguments.length<=r?void 0:arguments[r]),r+=1;s.set(u,e(...arguments)),s=s.get(u)}return s}}(this._getNeighboringMines.bind(this)),this.requestUpdate("board",t)}_getNeighbors(e,t){let s,r=0;for(var o=arguments.length,n=new Array(o>2?o-2:0),i=2;i<o;i++)n[i-2]=arguments[i];for(let o=-1;o<=1;o+=1)if(this.board[e+o])for(let i=-1;i<=1;i+=1)(s=this.board[e+o][t+i])&&(0===o&&0===i||n.includes(s.state)&&(r+=1));return r}_getNeighboringMines(){for(var e=arguments.length,t=new Array(e),s=0;s<e;s++)t[s]=arguments[s];return this._getNeighbors(...t,"MINE","MARKED_MINE","TRIPPED")}_getNeighboringMarks(){for(var e=arguments.length,t=new Array(e),s=0;s<e;s++)t[s]=arguments[s];return this._getNeighbors(...t,"MARKED","MARKED_MINE")}_playNeighbors(e,t,s){for(let r=-1;r<=1;r+=1)if(this.board[e+r])for(let o=-1;o<=1;o+=1){const n=this.board[e+r][t+o];n&&(s||"NOT_MINE"===n.state)&&(n.state=h(n.state,"PLAYED"),"TRIPPED"===n.state?this.status=E.DEAD:["MARKED","MARKED_MINE"].includes(n.state)||0!==this.memoizedGetNeighboringMines(e+r,t+o)||this._playNeighbors(e+r,t+o))}this.moves+=1}_played(e){if(this.status===E.DEAD)return;const{column:t,row:s}=e.target,r=this.board[t][s];if(this.focusedSquare=[t,s],"PLAYED"===r.state){const e=!0;if(this.memoizedGetNeighboringMines(t,s)!==this._getNeighboringMarks(t,s))return;this._playNeighbors(t,s,e)}else"MINE"===r.state?this.status=E.DEAD:this.memoizedGetNeighboringMines(t,s)||this._playNeighbors(t,s);r.state=h(r.state,"PLAYED"),this.moves+=1}_marked(e){const{column:t,row:s}=e.target,r=this.board[t][s];this.focusedSquare=[t,s],r.state=h(r.state,e.detail.marked?"UNMARKED":"MARKED"),this.marks+="MARKED"===r.state||"MARKED_MINE"===r.state?1:-1,this.moves+=1}handleKeydown(e){let{column:t,row:s}=e.composedPath()[0].getRootNode().host;const r=e.shiftKey?5:1;switch(e.key){case"ArrowDown":s=this.board[0].length+s+r;break;case"ArrowUp":s=this.board[0].length+s-r;break;case"ArrowLeft":t=this.board.length+t-r;break;case"ArrowRight":t=this.board.length+t+r;break;case"m":this.shadowRoot.querySelector('[column="'.concat(t,'"][row="').concat(s,'"]')).mark(e)}this.focusedSquare=[t%this.board.length,s%this.board[0].length]}focusBoard(){window.addEventListener("keydown",this.handleKeydown)}blurBoard(){window.removeEventListener("keydown",this.handleKeydown)}isFocusedSquare(e,t){return this.focusedSquare===w?0===e&&0===t:e===this.focusedSquare[0]&&t===this.focusedSquare[1]}get focusedSquareSelector(){const[e,t]=this.focusedSquare;return'[column="'.concat(e,'"][row="').concat(t,'"]')}static get styles(){return[o(p())]}render(){return n(f(),this.marks,this.mines,this.board.map((e,t)=>e.map((e,s)=>n(b(),e.state,this.memoizedGetNeighboringMines(t,s),t,s,this.isFocusedSquare(t,s),this._played,this._marked,this.focusBoard,this.blurBoard))))}updated(e){if(e.has("status")&&this.status===E.DEAD)this.dispatchEvent(new CustomEvent("minesweeper-game-over",{bubbles:!0,composed:!0}));else if(e.has("mines"))this.marks=0,this.status=E.PLAYING,this.focusedSquare=w;else{const e=this.shadowRoot.querySelector(this.focusedSquareSelector);e.updateComplete.then(()=>{e.focus()})}}});
//# sourceMappingURL=minesweeper-board-fcd22152.js.map
