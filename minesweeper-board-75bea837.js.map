{"version":3,"file":"minesweeper-board-75bea837.js","sources":["../src/memoize.js","../src/square-machine.js","../node_modules/lit-html/directive.js","../node_modules/lit-html/directives/class-map.js","../src/minesweeper-square.js","../src/minesweeper-board.js"],"sourcesContent":["const valueSymbol = Symbol('value');\n\nexport function memoize(cb) {\n  const memos = new Map();\n  return (...args) => {\n    let memo = memos;\n    let i = 0;\n    const ct = args.length;\n    while (memo.has(args[i]) && i < ct - 1) {\n      memo = memo.get(args[i]);\n      i += 1;\n    }\n    if (i === ct - 1 && memo.has(valueSymbol)) {\n      memo = memo.get(valueSymbol);\n    } else {\n      while (i < ct) {\n        memo.set(args[i], new Map());\n        memo = memo.get(args[i]);\n        i += 1;\n      }\n      memo.set(valueSymbol, cb(...args));\n      memo = memo.get(valueSymbol);\n    }\n    return memo;\n  };\n}\n","export const squareMachine = {\n  initial: 'INIT',\n  states: {\n    INIT: {\n      on: {\n        MINE: 'MINE',\n        NOT_MINE: 'NOT_MINE',\n      },\n    },\n    NOT_MINE: {\n      on: {\n        MARKED: 'MARKED',\n        PLAYED: 'PLAYED',\n      },\n    },\n    MINE: {\n      on: {\n        MARKED: 'MARKED_MINE',\n        PLAYED: 'TRIPPED',\n      },\n    },\n    MARKED: {\n      on: {\n        UNMARKED: 'NOT_MINE',\n      },\n    },\n    PLAYED: {\n      on: {},\n    },\n    MARKED_MINE: {\n      on: {\n        UNMARKED: 'MINE',\n      },\n    },\n    TRIPPED: {\n      on: {},\n    },\n  },\n};\n\nexport const squareTransition = (state, event) => {\n  if (!state) return squareMachine.initial;\n  return squareMachine.states[state].on[event] || state;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t={ATTRIBUTE:1,CHILD:2,PROPERTY:3,BOOLEAN_ATTRIBUTE:4,EVENT:5,ELEMENT:6},i=t=>(...i)=>({_$litDirective$:t,values:i});class s{constructor(t){}T(t,i,s){this.Σdt=t,this.M=i,this.Σct=s}S(t,i){return this.update(t,i)}update(t,i){return this.render(...i)}}export{s as Directive,t as PartType,i as directive};\n//# sourceMappingURL=directive.js.map\n","import{noChange as t}from\"../lit-html.js\";import{directive as s,Directive as r,PartType as i}from\"../directive.js\";\n/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const e=s(class extends r{constructor(t){var s;if(super(t),t.type!==i.ATTRIBUTE||\"class\"!==t.name||(null===(s=t.strings)||void 0===s?void 0:s.length)>2)throw Error(\"`classMap()` can only be used in the `class` attribute and must be the only part in the attribute.\")}render(t){return Object.keys(t).filter((s=>t[s])).join(\" \")}update(s,[r]){if(void 0===this.bt){this.bt=new Set;for(const t in r)r[t]&&this.bt.add(t);return this.render(r)}const i=s.element.classList;this.bt.forEach((t=>{t in r||(i.remove(t),this.bt.delete(t))}));for(const t in r){const s=!!r[t];s!==this.bt.has(t)&&(s?(i.add(t),this.bt.add(t)):(i.remove(t),this.bt.delete(t)))}return t}});export{e as classMap};\n//# sourceMappingURL=class-map.js.map\n","import { LitElement, html, css } from 'lit';\nimport { classMap } from 'lit/directives/class-map.js';\n\nclass MinesweeperSquare extends LitElement {\n  static get properties() {\n    return {\n      canFocus: { type: Boolean, attribute: 'can-focus' },\n      neighbors: { type: Number },\n      state: { type: String },\n      column: { type: Number },\n      row: { type: Number },\n    };\n  }\n\n  constructor() {\n    super();\n    this.state = 'INIT';\n    this.neighbors = 0;\n    this.column = 0;\n    this.row = 0;\n  }\n\n  _dangerLevel() {\n    switch (this.state) {\n      case 'MARKED':\n      case 'MARKED_MINE':\n        return 'm';\n      case 'TRIPPED':\n        return 'x';\n      case 'PLAYED':\n        return this.neighbors || '';\n      case 'MINE':\n      case 'NOT_MINE':\n      default:\n        return '';\n    }\n  }\n\n  play() {\n    if (['MARKED', 'MARKED_MINE'].includes(this.state)) return;\n    this.dispatchEvent(new CustomEvent('minesweeper-played'));\n  }\n\n  mark(e) {\n    e.preventDefault();\n    if (this.state === 'PLAYED') {\n      this.play();\n      return;\n    }\n    this.dispatchEvent(\n      new CustomEvent('minesweeper-marked', {\n        detail: {\n          marked: ['MARKED', 'MARKED_MINE'].includes(this.state),\n        },\n      }),\n    );\n  }\n\n  focus() {\n    this.shadowRoot.querySelector('button').focus();\n  }\n\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: flex;\n          line-height: var(--minesweeper-square-size, 25px);\n          text-align: center;\n        }\n        .square {\n          cursor: pointer;\n          box-sizing: border-box;\n          width: 100%;\n          height: 100%;\n          border: 4px outset;\n          background: var(--color-square-background, #cecece);\n          font-weight: bold;\n          font-family: monospace;\n          font-size: 2em;\n          -webkit-user-select: none; /* Chrome all / Safari all */\n          -moz-user-select: none; /* Firefox all */\n          -ms-user-select: none; /* IE 10+ */\n          user-select: none; /* Likely future */\n        }\n        .square:focus {\n          transform: translateZ(0);\n          outline: 2px solid var(--color-square-focus, blue);\n          outline-offset: -10px;\n        }\n        .played {\n          border: 1px solid var(--color-square-border, #999);\n        }\n        .played:focus {\n          outline-offset: -5px;\n        }\n        .low {\n          color: var(--color-danger-low, blue);\n        }\n        .medium {\n          color: var(--color-danger-medium, green);\n        }\n        .high {\n          color: var(--color-danger-high, red);\n        }\n        .worry {\n          color: var(--color-danger-worry, darkred);\n        }\n        .dead {\n          background: var(--color-dead, red);\n        }\n      `,\n    ];\n  }\n\n  testDangerLevel(dangerLevel, threashold = -1) {\n    return this.state === 'PLAYED' && dangerLevel > threashold;\n  }\n\n  get squareType() {\n    switch (this.state) {\n      case 'PLAYED':\n        return 'Played';\n      case 'MARKED':\n      case 'MARKED_MINE':\n        return 'Marked';\n      default:\n        return 'Playable';\n    }\n  }\n\n  render() {\n    const dangerLevel = this._dangerLevel();\n    return html`\n      <button\n        class=${classMap({\n          square: true,\n          played: ['PLAYED', 'TRIPPED'].includes(this.state),\n          low: this.testDangerLevel(dangerLevel),\n          medium: this.testDangerLevel(dangerLevel, 1),\n          high: this.testDangerLevel(dangerLevel, 2),\n          worry: this.testDangerLevel(dangerLevel, 5),\n          dead: this.state === 'TRIPPED',\n        })}\n        tabindex=${this.canFocus ? '0' : '-1'}\n        @click=${this.play}\n        @contextmenu=${this.mark}\n        aria-label=${`${this.squareType} Square: Column ${this.column + 1}, Row ${this.column + 1}`}\n      >\n        ${dangerLevel}\n      </button>\n    `;\n  }\n}\n\ncustomElements.define('minesweeper-square', MinesweeperSquare);\n","import { LitElement, html, css } from 'lit';\n\nimport { memoize } from './memoize.js';\nimport { squareTransition } from './square-machine.js';\nimport { defaultBoard } from './constants.js';\nimport './minesweeper-square.js';\n\nconst status = {\n  DEAD: 'dead',\n  PLAYING: 'playing',\n};\n\nconst defaultFocusedSquare = [0, 0];\n\nclass MinesweeperBoard extends LitElement {\n  static get properties() {\n    return {\n      moves: { type: Number },\n      board: { type: Array },\n      marks: { type: Number },\n      mines: { type: Number },\n      status: { type: String },\n      focusedSquare: { type: Array },\n    };\n  }\n\n  constructor() {\n    super();\n    this.board = defaultBoard;\n    this.moves = 0;\n    this.marks = 0;\n    this.mines = 0;\n    this.status = status.PLAYING;\n    this.focusedSquare = defaultFocusedSquare;\n    this.handleKeydown = this.handleKeydown.bind(this);\n  }\n\n  get board() {\n    return this._board;\n  }\n\n  set board(board) {\n    if (board === this.board) return;\n    const old = this.board;\n    this._board = board;\n    this.memoizedGetNeighboringMines = memoize(this._getNeighboringMines.bind(this));\n    this.requestUpdate('board', old);\n  }\n\n  _getNeighbors(across, down, ...needles) {\n    let neighbors = 0;\n    this._doNeighbors(across, down, (square) => {\n      if (needles.includes(square.state)) {\n        neighbors += 1;\n      }\n    });\n    return neighbors;\n  }\n\n  _doNeighbors(across, down, cb) {\n    const neighbors = 0;\n    for (let i = -1; i <= 1; i += 1) {\n      if (this.board[across + i]) {\n        for (let j = -1; j <= 1; j += 1) {\n          const square = this.board[across + i][down + j];\n          if (square && (i !== 0 || j !== 0)) {\n            cb(square, i, j);\n          }\n        }\n      }\n    }\n    return neighbors;\n  }\n\n  _getNeighboringMines(...args) {\n    return this._getNeighbors(...args, 'MINE', 'MARKED_MINE', 'TRIPPED');\n  }\n\n  _getNeighboringMarks(...args) {\n    return this._getNeighbors(...args, 'MARKED', 'MARKED_MINE');\n  }\n\n  _playNeighbors(across, down, unsafe) {\n    this._doNeighbors(across, down, (square, i, j) => {\n      if (unsafe || square.state === 'NOT_MINE') {\n        square.state = squareTransition(square.state, 'PLAYED');\n        if (square.state === 'TRIPPED') {\n          this.status = status.DEAD;\n        } else if (\n          !['MARKED', 'MARKED_MINE'].includes(square.state) &&\n          this.memoizedGetNeighboringMines(across + i, down + j) === 0\n        ) {\n          this._playNeighbors(across + i, down + j);\n        }\n      }\n    });\n    this.moves += 1;\n  }\n\n  _played(e) {\n    if (this.status === status.DEAD) return;\n    const { column, row } = e.target;\n    const square = this.board[column][row];\n    this.focusedSquare = [column, row];\n    if (square.state === 'PLAYED') {\n      const unsafe = true;\n      if (\n        this.memoizedGetNeighboringMines(column, row) === this._getNeighboringMarks(column, row)\n      ) {\n        this._playNeighbors(column, row, unsafe);\n      } else {\n        return;\n      }\n    } else if (square.state === 'MINE') {\n      this.status = status.DEAD;\n    } else if (!this.memoizedGetNeighboringMines(column, row)) {\n      this._playNeighbors(column, row);\n    }\n    square.state = squareTransition(square.state, 'PLAYED');\n    this.moves += 1;\n  }\n\n  _marked(e) {\n    const { column, row } = e.target;\n    const square = this.board[column][row];\n    this.focusedSquare = [column, row];\n    square.state = squareTransition(square.state, e.detail.marked ? 'UNMARKED' : 'MARKED');\n    this.marks += square.state === 'MARKED' || square.state === 'MARKED_MINE' ? 1 : -1;\n    this.moves += 1;\n  }\n\n  handleKeydown(e) {\n    let { column, row } = e.composedPath()[0].getRootNode().host;\n    const offset = e.shiftKey ? 5 : 1;\n    switch (e.key) {\n      case 'ArrowDown':\n        row = this.board[0].length + row + offset;\n        break;\n      case 'ArrowUp':\n        row = this.board[0].length + row - offset;\n        break;\n      case 'ArrowLeft':\n        column = this.board.length + column - offset;\n        break;\n      case 'ArrowRight':\n        column = this.board.length + column + offset;\n        break;\n      case 'm':\n        this.shadowRoot.querySelector(`[column=\"${column}\"][row=\"${row}\"]`).mark(e);\n        break;\n      default:\n        break;\n    }\n    this.focusedSquare = [column % this.board.length, row % this.board[0].length];\n  }\n\n  focusBoard() {\n    window.addEventListener('keydown', this.handleKeydown);\n  }\n\n  blurBoard() {\n    window.removeEventListener('keydown', this.handleKeydown);\n  }\n\n  isFocusedSquare(across, down) {\n    if (this.focusedSquare === defaultFocusedSquare) {\n      return across === 0 && down === 0;\n    }\n    return across === this.focusedSquare[0] && down === this.focusedSquare[1];\n  }\n\n  get focusedSquareSelector() {\n    const [column, row] = this.focusedSquare;\n    return `[column=\"${column}\"][row=\"${row}\"]`;\n  }\n\n  static get styles() {\n    return [\n      css`\n        :host {\n          position: relative;\n          display: grid;\n          flex-grow: 1;\n          grid-auto-flow: column;\n          grid-template-columns: repeat(var(--columns), 1fr);\n          grid-template-rows: repeat(var(--rows), 1fr);\n        }\n        .status {\n          position: absolute;\n          bottom: 100%;\n          right: 0;\n          line-height: 48px;\n        }\n      `,\n    ];\n  }\n\n  render() {\n    return html`\n      <div class=\"status\">\n        ${this.marks}/${this.mines}\n      </div>\n      ${this.board.map((column, across) =>\n        column.map(\n          (square, down) => html`\n            <minesweeper-square\n              .state=${square.state}\n              .neighbors=${this.memoizedGetNeighboringMines(across, down)}\n              column=${across}\n              row=${down}\n              ?can-focus=${this.isFocusedSquare(across, down)}\n              @minesweeper-played=${this._played}\n              @minesweeper-marked=${this._marked}\n              @focus=${this.focusBoard}\n              @blur=${this.blurBoard}\n            ></minesweeper-square>\n          `,\n        ),\n      )}\n    `;\n  }\n\n  updated(changes) {\n    if (changes.has('status') && this.status === status.DEAD) {\n      this.dispatchEvent(\n        new CustomEvent('minesweeper-game-over', { bubbles: true, composed: true }),\n      );\n    } else if (changes.has('mines')) {\n      this.marks = 0;\n      this.status = status.PLAYING;\n      this.focusedSquare = defaultFocusedSquare;\n    } else {\n      const square = this.shadowRoot.querySelector(this.focusedSquareSelector);\n      square.updateComplete.then(() => {\n        square.focus();\n      });\n    }\n  }\n}\n\ncustomElements.define('minesweeper-board', MinesweeperBoard);\n"],"names":["valueSymbol","Symbol","squareMachine","initial","states","INIT","on","MINE","NOT_MINE","MARKED","PLAYED","UNMARKED","MARKED_MINE","TRIPPED","squareTransition","state","event","PartType","classMap","c","values","_$litDirective$","directive","[object Object]","_partInfo","part","parent","attributeIndex","__part","this","_$parent","__attributeIndex","props","update","_part","render","partInfo","super","type","name","strings","length","Error","classInfo","Object","keys","filter","key","join","_previousClasses","Set","add","classList","element","forEach","remove","delete","value","has","noChange","customElements","define","LitElement","canFocus","Boolean","attribute","neighbors","Number","String","column","row","constructor","_dangerLevel","play","includes","dispatchEvent","CustomEvent","mark","e","preventDefault","detail","marked","focus","shadowRoot","querySelector","css","testDangerLevel","dangerLevel","threashold","html","square","played","low","medium","high","worry","dead","squareType","status","DEAD","PLAYING","defaultFocusedSquare","moves","board","Array","marks","mines","focusedSquare","defaultBoard","handleKeydown","bind","_board","old","memoizedGetNeighboringMines","cb","memos","Map","args","memo","i","ct","get","set","memoize","_getNeighboringMines","requestUpdate","_getNeighbors","across","down","needles","_doNeighbors","j","_getNeighboringMarks","_playNeighbors","unsafe","_played","target","_marked","composedPath","getRootNode","host","offset","shiftKey","focusBoard","window","addEventListener","blurBoard","removeEventListener","isFocusedSquare","map","updated","changes","bubbles","composed","focusedSquareSelector","updateComplete","then"],"mappings":"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"}