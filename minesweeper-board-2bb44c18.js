import{e,f as t,g as s,a as r,b as o,c as i,d as a}from"./chunk-cfc15dc0.js";const n=new WeakMap,h=e(e=>r=>{if(!(r instanceof t)||r instanceof s||"class"!==r.committer.name||r.committer.parts.length>1)throw new Error("The `classMap` directive must be used in the `class` attribute and must be the only part in the attribute.");const{committer:o}=r,{element:i}=o;n.has(r)||(i.className=o.strings.join(" "));const{classList:a}=i,h=n.get(r);for(const t in h)t in e||a.remove(t);for(const t in e){const s=e[t];if(!h||s!==h[t]){a[s?"add":"remove"](t)}}n.set(r,e)});function d(){const e=a(["<button class="," tabindex="," @click="," @contextmenu="," aria-label=",">","</button>"]);return d=function(){return e},e}function u(){const e=a([":host{display:flex;line-height:var(--minesweeper-square-size,25px);text-align:center}.square{cursor:pointer;box-sizing:border-box;width:100%;height:100%;border:4px outset;background:var(--color-square-background,#cecece);font-weight:700;font-family:monospace;font-size:2em;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.square:focus{transform:translateZ(0);outline:2px solid var(--color-square-focus,#00f);outline-offset:-10px}.played{border:1px solid var(--color-square-border,#999)}.played:focus{outline-offset:-5px}.low{color:var(--color-danger-low,#00f)}.medium{color:var(--color-danger-medium,green)}.high{color:var(--color-danger-high,red)}.worry{color:var(--color-danger-worry,#8b0000)}.dead{background:var(--color-dead,red)}"]);return u=function(){return e},e}function c(){const e=a(["<minesweeper-square .mine="," .marked="," .neighbors="," .played="," column="," row="," ?can-focus="," @minesweeper-played="," @minesweeper-marked="," @focus="," @blur=","></minesweeper-square>"]);return c=function(){return e},e}function l(){const e=a(["<div class=status>","/","</div>",""]);return l=function(){return e},e}function m(){const e=a([":host{position:relative;display:grid;flex-grow:1;grid-auto-flow:column;grid-template-columns:repeat(var(--columns),1fr);grid-template-rows:repeat(var(--rows),1fr)}.status{position:absolute;bottom:100%;right:0;line-height:48px}"]);return m=function(){return e},e}customElements.define("minesweeper-square",class extends r{static get properties(){return{canFocus:{type:Boolean,attribute:"can-focus"},mine:{type:Boolean},neighbors:{type:Number},played:{type:Boolean},marked:{type:Boolean},column:{type:Number},row:{type:Number}}}constructor(){super(),this.mine=!1,this.neighbors=0,this.played=!1,this.marked=!1,this.column=0,this.row=0}_dangerLevel(){return this.marked?"m":this.played?this.mine?"X":this.neighbors||"":""}play(){this.marked||this.dispatchEvent(new CustomEvent("minesweeper-played"))}mark(e){e.preventDefault(),this.played?this.play():this.dispatchEvent(new CustomEvent("minesweeper-marked",{detail:{marked:this.marked}}))}focus(){this.shadowRoot.querySelector("button").focus()}static get styles(){return[o(u())]}testDangerLevel(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return!this.mine&&this.played&&e>t}render(){const e=this._dangerLevel();return i(d(),h({square:!0,played:this.played,low:this.testDangerLevel(e),medium:this.testDangerLevel(e,1),high:this.testDangerLevel(e,2),worry:this.testDangerLevel(e,5),dead:this.played&&this.mine}),this.canFocus?"0":"-1",this.play,this.mark,"".concat(this.played?"Played":"Playable"," Square: Column ").concat(this.column+1,", Row ").concat(this.column+1),e)}});const p={DEAD:"dead",PLAYING:"playing"},g=[0,0];customElements.define("minesweeper-board",class extends r{static get properties(){return{board:{type:Array},marks:{type:Number},mines:{type:Number},status:{type:String},focusedSquare:{type:Array}}}constructor(){super(),this.board=[],this.marks=0,this.mines=0,this.status=p.PLAYING,this.focusedSquare=g,this.handleKeydown=this.handleKeydown.bind(this)}_getNeighbors(e,t,s){let r,o=0;for(let i=-1;i<=1;i+=1)if(this.board[e+i])for(let a=-1;a<=1;a+=1)(r=this.board[e+i][t+a])&&(0===i&&0===a||r[s]&&(o+=1));return o}_getNeighboringMines(){for(var e=arguments.length,t=new Array(e),s=0;s<e;s++)t[s]=arguments[s];return this._getNeighbors(...t,"mine")}_getNeighboringMarks(){for(var e=arguments.length,t=new Array(e),s=0;s<e;s++)t[s]=arguments[s];return this._getNeighbors(...t,"marked")}_playNeighbors(e,t,s){for(let r=e-1;r<=e+1;r+=1)if(this.board[r])for(let e=t-1;e<=t+1;e+=1)if(this.board[r][e]){const t=this.board[r][e];!s&&t.mine||t.played||t.marked||(t.played=!0,t.mine&&(this.status=p.DEAD),this._getNeighboringMines(r,e)||this._playNeighbors(r,e))}this.board=[...this.board]}_played(e){if(this.status===p.DEAD)return;const{column:t,row:s}=e.target,r=this.board[t][s];if(this.focusedSquare=[t,s],r.played){const e=!0;if(this._getNeighboringMines(t,s)!==this._getNeighboringMarks(t,s))return;this._playNeighbors(t,s,e)}else r.mine?this.status=p.DEAD:this._getNeighboringMines(t,s)||this._playNeighbors(t,s);r.played=!0,this.board=[...this.board]}_marked(e){const{column:t,row:s}=e.target,r=this.board[t][s];this.focusedSquare=[t,s],r.marked=!e.detail.marked,this.marks+=r.marked?1:-1,this.board=[...this.board]}handleKeydown(e){let{column:t,row:s}=e.composedPath()[0].getRootNode().host;const r=e.shiftKey?5:1;switch(e.key){case"ArrowDown":s=this.board[0].length+s+r;break;case"ArrowUp":s=this.board[0].length+s-r;break;case"ArrowLeft":t=this.board.length+t-r;break;case"ArrowRight":t=this.board.length+t+r;break;case"m":this.shadowRoot.querySelector('[column="'.concat(t,'"][row="').concat(s,'"]')).mark(e)}this.focusedSquare=[t%this.board[0].length,s%this.board.length]}focusBoard(){window.addEventListener("keydown",this.handleKeydown)}blurBoard(){window.removeEventListener("keydown",this.handleKeydown)}isFocusedSquare(e,t){return this.focusedSquare===g?0===e&&0===t:e===this.focusedSquare[0]&&t===this.focusedSquare[1]}get focusedSquareSelector(){const[e,t]=this.focusedSquare;return'[column="'.concat(e,'"][row="').concat(t,'"]')}static get styles(){return[o(m())]}render(){return i(l(),this.marks,this.mines,this.board.map((e,t)=>e.map((e,s)=>i(c(),e.mine,e.marked,this._getNeighboringMines(t,s),e.played,t,s,this.isFocusedSquare(t,s),this._played,this._marked,this.focusBoard,this.blurBoard))))}updated(e){if(e.has("status")&&this.status===p.DEAD)this.dispatchEvent(new CustomEvent("minesweeper-game-over",{bubbles:!0,composed:!0}));else if(e.has("mines"))this.marks=0,this.status=p.PLAYING,this.focusedSquare=g;else{const e=this.shadowRoot.querySelector(this.focusedSquareSelector);e.updateComplete.then(()=>{e.focus()})}}});
//# sourceMappingURL=minesweeper-board-2bb44c18.js.map
